#!/usr/bin/env ruby

require 'cgi'
require 'stringio'
require 'tempfile'
require 'tmpdir'


def despace(x)
  x.is_a?(String) ? x.tr(' ', '') : x
end

def ensure_tempfile(events)
  case events
  when StringIO
    t =Tempfile.new('pippo')
    t.write(events.read)
    t.flush
    return t

  when Tempfile
    return events

  else
    raise "Boh.  I should never arrive here"
  end
end

def make_decay(decay, tau)
  case decay
  when "none", "step"
    return decay

  when "lin"
    return "linear:#{despace(tau)}"

  when "exp"
    return "exp:#{despace(tau)}"

  else
    raise "I shouldn't be here"
  end

end

cgi=CGI.new

Dir.mktmpdir do |dir|
  frame_rate = despace(cgi.params['fps'][0])

  decay    = make_decay(cgi.params['decay'][0], cgi.params['tau'][0])

  template = File.basename(cgi.params['template'][0])
  template = File.join(dir, template)

  event_file = ensure_tempfile(cgi.params['myfile'][0])



  $stderr.puts "[#{frame_rate}]"
  $stderr.puts "[#{template}]"
  $stderr.puts "[#{decay}]"
  $stderr.puts(event_file.path)

  cgi.print("pippo")
  sleep(30)
end

# $stderr.puts (cgi.params.inspect)
# 
# cgi.print("Panini fritti!!!")
# cgi.print (cgi.params.inspect)
# 
# cgi.print(cgi.params['myfile'].first.read)
#   
# cgi.print(cgi.files.inspect)

# class CGIbis < CGI
#   include CGI::QueryExtension
# end
# 
# 
