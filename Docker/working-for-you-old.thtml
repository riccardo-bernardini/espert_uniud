
<!DOCTYPE html>
<html lang="en">
  <head>
    <script type="text/javascript">
      "use strict";  // Ma chi le pensa certe cose?!?

      var remote_status = 0;
      var error_message = "";
      var interval_ID;
      
      const accumulator_done = 201;
      const archive_ready = 202;
      const fetch_error = 203;

      

      function inner_sleep(ms) {
	  return new Promise(resolve => setTimeout(resolve, ms));
      }

      async function sleep(ms) {
	  await inner_sleep(ms)
      }

      async function load_stderr()
      {
	  const response = await fetch("%{stderr}%");

	  if (response.ok)
	  {
	      error_message = await response.text();

	      console.log("Stderr=" + error_message);
	  }
	  else
	  {
	      error_message = "Error while fetching stderr: " + response.statusText;
	  }
      }

      function set_percentage(percent)
      {
	  if (typeof percent === 'number')
	  {
	      console.log(`Set % [${percent}]`);
	      document
		  .getElementById("colored-bar")
		  .setAttribute("width", `${percent}%`);

	      document
		  .getElementById("percentage")
		  .innerHTML = `${percent}%`;
	      console.log("Done");
	  }
	  else
	  {
	      document
		  .getElementById("colored-bar")
		  .setAttribute("width", "100%");

	      document
		  .getElementById("colored-bar")
		  .setAttribute("style", "fill:rgb(200,200,200);stroke-width:0");

	  }
      }

      async function get_status()
      {
	  const response = await fetch("%{status_file}%");

	  if (response.ok)
	  {
	      const buffer = await response.arrayBuffer();
	      const status = new Uint8Array(buffer);

	      console.log(status[0].constructor.name);
	      
	      remote_status = status[0];
	  }
	  else
	  {
	      console.log(response.statusText);

	      remote_status = fetch_error;
	      error_message = response.statusText;
	  }
      }
      
      async function aggiorna_barra()
      {
	  
	  get_status();

	  console.log(`Eccomi [${remote_status}]`)

	  status = remote_status;
	  
	  if (status <= 200)
	  {
	      set_percentage(status * 0.5);
	  }
	  else if (status == accumulator_done)
	  {
	      set_percentage(100.0);
	  }
	  else if (status == archive_ready)
	  {
	      set_percentage(100.0);
	      
	      document
		  .getElementById("download-button")
		  .disabled=false;

	      clearInterval(interval_ID);
	  }
	  else if (status == fetch_error)
	  {
	      set_percentage(false);
	      document
		  .getElementById("message-area")
		  .innerHTML = error_message;

	      clearInterval(interval_ID);
	  }
	  else
	  {
	      set_percentage(false);
	      load_stderr();
	      
	      document
		  .getElementById("message-area")
		  .innerHTML = error_message;

	      clearInterval(interval_ID);
	  }

      }

      function parti()
      {
	  interval_ID = setInterval(aggiorna_barra, 500);
      }
    </script>
  </head>
<body onload="parti()">
<p>
Creating your image, please wait
</p>
<p>
  You will find your result <a href="%{zipfile}%">here</a>.
</p>
<table>
  <tr>
    <td>
      <svg width="50%" height="1em">
	<rect width="100%" height="100%" style="fill:rgb(255,255,255);stroke-width:1;stroke:rgb(0,0,0)" />
	<rect width="0%" height="100%" style="fill:rgb(255,0,0);stroke-width:0" id="colored-bar"/>
      </svg>
    </td>
    <td id="percentage"></td>
    <td>
      <form method="get" action="%{zipfile}%">
	<button type="submit" disabled="true" id="download-button">Download!</button>
      </form>
    </td>
  </tr>
</table>
<div id='message-area'></div>
<p>Current status <a href="%{status_file}%">here</a></p>
<p>Standard error <a href="%{stderr}%">here</a></p>
</p>
</body>
